image: docker:20.10.16

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

stages:
  - publish
  - deploy_dev
  # - deploy release
  # - deploy production

publish:
  image: docker:latest
  stage: publish
  tags:
    - dev
  services:
    - docker:20.10.16-dind
  only:
    - dev
    - /(dell_cicd)/
  script:
    - docker build -t $TAG_COMMIT -t $TAG_LATEST .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST

deploy dev:
  stage: deploy_dev
  only:
    - dev
    - /(dell_cicd)/
  environment:
    name: production
    url: http://185.149.51.50
  tags:
    - deployer
  script:
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$ID_RSA" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H ${SERVER_IP} >> ~/.ssh/known_hosts
    - ssh-keyscan $SERVER_IP | sort -u - ~/.ssh/known_hosts -o ~/.ssh/known_hosts
    - '[[ -f /.dockerinit ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - sh ./deploy.sh


    
  
# test:
#   stage: test
#   tags:
#    - dev
#   script:
#    - echo "test"


# deploy_on_release:
#   stage: deploy release
#   tags:
#     - release
#   script:
#     - echo "deploy_on_release"

# deploy_on_production:
#   stage: deploy production
#   tags:
#     - prod
#   script:
#     - echo "deploy_on_production"
